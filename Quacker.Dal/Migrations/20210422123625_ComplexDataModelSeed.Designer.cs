// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quacker.Dal;

namespace Quacker.Dal.Migrations
{
    [DbContext(typeof(QuackerDbContext))]
    [Migration("20210422123625_ComplexDataModelSeed")]
    partial class ComplexDataModelSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Quacker.Dal.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(281)")
                        .HasMaxLength(281);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Well said",
                            CreationDate = new DateTime(2021, 1, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Quacker.Dal.Entities.Following", b =>
                {
                    b.Property<int>("FollowerId")
                        .HasColumnType("int");

                    b.Property<int>("FollowedId")
                        .HasColumnType("int");

                    b.HasKey("FollowerId", "FollowedId");

                    b.HasIndex("FollowedId");

                    b.ToTable("Followings");

                    b.HasData(
                        new
                        {
                            FollowerId = 1,
                            FollowedId = 2
                        },
                        new
                        {
                            FollowerId = 1,
                            FollowedId = 3
                        },
                        new
                        {
                            FollowerId = 1,
                            FollowedId = 4
                        },
                        new
                        {
                            FollowerId = 1,
                            FollowedId = 5
                        },
                        new
                        {
                            FollowerId = 1,
                            FollowedId = 6
                        },
                        new
                        {
                            FollowerId = 1,
                            FollowedId = 7
                        });
                });

            modelBuilder.Entity("Quacker.Dal.Entities.Like", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("Likes");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PostId = 1
                        });
                });

            modelBuilder.Entity("Quacker.Dal.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Hi man!",
                            CreationDate = new DateTime(2021, 1, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = 2,
                            SenderId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Heyyo!",
                            CreationDate = new DateTime(2021, 1, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = 1,
                            SenderId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "How are you?",
                            CreationDate = new DateTime(2021, 1, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = 2,
                            SenderId = 1
                        });
                });

            modelBuilder.Entity("Quacker.Dal.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(281)")
                        .HasMaxLength(281);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasImage")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "What a vacation it was!!",
                            CreationDate = new DateTime(2021, 1, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            HasImage = false,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "What a vacation it was!! Here is a pic!",
                            CreationDate = new DateTime(2021, 1, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            HasImage = true,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Quacker.Dal.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasImage")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasImage = true,
                            UserName = "Marsh Holland"
                        },
                        new
                        {
                            Id = 2,
                            HasImage = true,
                            UserName = "Minerva Harrett"
                        },
                        new
                        {
                            Id = 3,
                            HasImage = true,
                            UserName = "Daisy Alvarado"
                        },
                        new
                        {
                            Id = 4,
                            HasImage = true,
                            UserName = "Frank Kelley"
                        },
                        new
                        {
                            Id = 5,
                            HasImage = true,
                            UserName = "Yvette Goodman"
                        },
                        new
                        {
                            Id = 6,
                            HasImage = true,
                            UserName = "Shawn Curtis"
                        },
                        new
                        {
                            Id = 7,
                            HasImage = true,
                            UserName = "Gaylord Mcgee"
                        },
                        new
                        {
                            Id = 8,
                            HasImage = true,
                            UserName = "Alec Reid"
                        },
                        new
                        {
                            Id = 9,
                            HasImage = true,
                            UserName = "Neal Mack"
                        },
                        new
                        {
                            Id = 10,
                            HasImage = true,
                            UserName = "Britney Abbott"
                        },
                        new
                        {
                            Id = 11,
                            HasImage = true,
                            UserName = "Angela Gray"
                        },
                        new
                        {
                            Id = 12,
                            HasImage = true,
                            UserName = "Tabitha Dean"
                        },
                        new
                        {
                            Id = 13,
                            HasImage = true,
                            UserName = "Marmaduke Schwartz"
                        },
                        new
                        {
                            Id = 14,
                            HasImage = true,
                            UserName = "Pearl Moreno"
                        },
                        new
                        {
                            Id = 15,
                            HasImage = true,
                            UserName = "Danielle Wintringham"
                        },
                        new
                        {
                            Id = 16,
                            HasImage = true,
                            UserName = "Hughie Taylor"
                        },
                        new
                        {
                            Id = 17,
                            HasImage = true,
                            UserName = "Gregory Walker"
                        },
                        new
                        {
                            Id = 18,
                            HasImage = true,
                            UserName = "Albert French"
                        },
                        new
                        {
                            Id = 19,
                            HasImage = true,
                            UserName = "Duncan Barnes"
                        },
                        new
                        {
                            Id = 20,
                            HasImage = true,
                            UserName = "Beatrice Johnston"
                        });
                });

            modelBuilder.Entity("Quacker.Dal.Entities.Comment", b =>
                {
                    b.HasOne("Quacker.Dal.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quacker.Dal.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Quacker.Dal.Entities.Following", b =>
                {
                    b.HasOne("Quacker.Dal.Entities.User", "Followed")
                        .WithMany("Followers")
                        .HasForeignKey("FollowedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quacker.Dal.Entities.User", "Follower")
                        .WithMany("FollowedUsers")
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Quacker.Dal.Entities.Like", b =>
                {
                    b.HasOne("Quacker.Dal.Entities.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quacker.Dal.Entities.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Quacker.Dal.Entities.Message", b =>
                {
                    b.HasOne("Quacker.Dal.Entities.User", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Quacker.Dal.Entities.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Quacker.Dal.Entities.Post", b =>
                {
                    b.HasOne("Quacker.Dal.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
